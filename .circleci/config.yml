version: 2
jobs:
  build:
    parallelism: 1
    working_directory: ~/circleci-suburi

    branches:
      only:
        - master

    environment:
      CIRCLE_ARTIFACTS: ~/circleci-suburi/

    docker:
      - image: circleci/ruby:2.6.3-node
      - image: circleci/mysql:8.0.12
        command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_bin --default-authentication-plugin=mysql_native_password
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
          MYSQL_ROOT_PASSWORD: ''
      - image: redis

    steps:

      - checkout

      - run:
          name: Install system dependencies
          command: |
            gem install bundler -v 2.0.1

      - restore_cache:
          keys:
            - bundle-cache-{{ checksum "Gemfile.lock" }}
            - bundle-cache-

      - run:
          name: Bundle Install
          command: bundle install --path vendor/bundle

      - save_cache:
          key: bundle-cache-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - restore_cache:
          keys:
            - yarn-cache-{{ checksum "yarn.lock" }}
            - yarn-cache-

      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      - save_cache:
          key: yarn-cache-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s

      - run:
          name: create test DB
          environment:
            RAILS_ENV: test
            DATABASE_USER: root
          command: |
            mv config/database.ci.yml config/database.yml
            bin/rails db:create
            bin/rails db:setup

      - run: mkdir -p $CIRCLE_ARTIFACTS

      - run:
          name: run test
          command: bundle exec rspec --exclude-pattern "spec/integration/**/*_spec.rb"

      - store_artifacts:
          path: ~/circleci-suburi/coverage
