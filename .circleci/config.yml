version: 2.1

orbs:
  ganta-git: ganta/git@1.2.0

executors:
  default:
    working_directory: ~/app
    docker:
      - image: circleci/ruby:2.6.3-node
        environment:
          BUNDLER_VERSION: 2.1.4
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test
          DATABASE_USER: root
      - image: circleci/mysql:8.0.12
        command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_0900_ai_ci --default-authentication-plugin=mysql_native_password
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
          MYSQL_ROOT_PASSWORD: ''
      - image: redis

jobs:
  build:
    executor:
      name: default
    steps:
      # source
      - ganta-git/shallow-clone-checkout
      - save_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/app
      # bundle
      - run:
          name: bundler install
          command: |
            gem install bundler
      - run:
          command: bundle -v
      - restore_cache:
          keys:
            - bundle-v2-cache-{{ checksum "Gemfile.lock" }}
            - bundle-v2-cache-
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      - save_cache:
          key: bundle-v2-cache-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      # yarn
      - restore_cache:
          keys:
            - yarn-cache-{{ checksum "yarn.lock" }}
            - yarn-cache-
      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn
      - save_cache:
          key: yarn-cache-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
  rubocop:
    executor:
      name: default
    steps:
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - bundle-v2-cache-{{ checksum "Gemfile.lock" }}
            - bundle-v2-cache-
      - run:
          name: bundler install
          command: |
            gem install bundler
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      - run:
          name: RuboCop
          command: bundle exec rubocop
  brakeman:
    executor:
      name: default
    steps:
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - bundle-v2-cache-{{ checksum "Gemfile.lock" }}
            - bundle-v2-cache-
      - run:
          name: bundler install
          command: |
            gem install bundler
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      - run:
          name: A static analysis security
          command: bundle exec brakeman -z
  precompile:
    executor:
      name: default
    steps:
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - bundle-v2-cache-{{ checksum "Gemfile.lock" }}
            - bundle-v2-cache-
      - run:
          name: bundler install
          command: |
            gem install bundler
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      - run:
          name: Precompile assets
          command: bundle exec rake assets:precompile
  tbls:
    executor:
      name: default
    steps:
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - bundle-v2-cache-{{ checksum "Gemfile.lock" }}
            - bundle-v2-cache-
      - run:
          name: bundler install
          command: |
            gem install bundler
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run:
          name: create test DB
          command: |
            mv config/database.ci.yml config/database.yml
            bin/rails db:create
            bin/rails db:setup
      - run:
          name: Install tbls
          command: |
            curl -sL https://git.io/use-tbls > use-tbls.tmp && . ./use-tbls.tmp && rm ./use-tbls.tmp
            tbls diff my://root@127.0.0.1:3306/suburi_test
  swagger:
    executor:
      name: default
    steps:
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - bundle-v2-cache-{{ checksum "Gemfile.lock" }}
            - bundle-v2-cache-
      - run:
          name: bundler install
          command: |
            gem install bundler
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      - run:
          name: Generate swagger ui
          command: |
            ruby bin/swagger.rb
      - store_artifacts:
          path: swagger-ui/dist
  test:
    parallelism: 3
    executor:
      name: default
    steps:
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - bundle-v2-cache-{{ checksum "Gemfile.lock" }}
            - bundle-v2-cache-
      - run:
          name: bundler install
          command: |
            gem install bundler
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run:
          name: create test DB
          command: |
            mv config/database.ci.yml config/database.yml
            bin/rails db:create
            bin/rails db:setup
      - run:
          name: run test
          command: |
            mkdir /tmp/test-results
            TESTFILES=$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=filesize)
            bundle exec rspec $TESTFILES --profile 10 --format RspecJunitFormatter --out /tmp/test-results/rspec.xml --format progress
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: coverage
          destination: coverage

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - rubocop:
          requires:
            - build
      - brakeman:
          requires:
            - build
      - tbls:
          requires:
            - build
      - swagger:
          requires:
            - build
      - test:
          requires:
            - build
